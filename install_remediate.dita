<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.2" domains="(topic task)                            (topic hi-d)                            (topic ut-d)                            (topic indexing-d)                              (topic pr-d)                            (topic sw-d)                            (topic ui-d)                            (topic task strictTaskbody-c)   " id="install-remediate"><title>Install <ph conkeyref="ProductNames/remediate"/> on online nodes</title><shortdesc>Install <ph conkeyref="ProductNames/remediate_long"/> on a <ph conkeyref="ProductNames/linux"/> or <ph conkeyref="ProductNames/windows"/> machine that is connected to the internet. </shortdesc><prolog><author translate="no" type="creator">Eamonn Smith &lt;eamonn.smith@puppet.com&gt;</author></prolog><taskbody><prereq><p>Make sure you meet the system requirements for installing and running <ph conkeyref="ProductNames/remediate"/>, and that you have received your <xref format="html" href="https://licenses.puppet.com/" scope="external">license</xref>. </p></prereq><steps><step> <cmd>Install and run Docker on the node where you want to install <ph conkeyref="ProductNames/remediate"/>.</cmd> <substeps><substep> <cmd>Download Docker for your operating system:</cmd> <info><ul><li><p> <ph conkeyref="ProductNames/linux"/>: <xref format="html" href="https://docs.docker.com/install/#supported-platforms" scope="external" type="http:">Docker CE</xref> 17.04.0-ce or higher, or <xref format="html" href="https://docs.docker.com/install/linux/docker-ee/centos/" scope="external" type="http:">Docker EE</xref> 17.06.1 or higher.</p></li><li><p> <ph conkeyref="ProductNames/windows"/>: <xref format="html" href="https://docs.docker.com/docker-for-windows/install/" scope="external" type="http:">Docker for Windows</xref>.</p></li></ul></info> </substep><substep> <cmd>Download <xref format="html" href="https://docs.docker.com/compose/install/" scope="external">Docker Compose</xref>. </cmd> <info><note>If installing Docker Compose on <ph conkeyref="ProductNames/windows"/>, create a new environment variable called <codeph>COMPOSE_CONVERT_WINDOWS_PATHS</codeph> and set it to <codeph>1</codeph>. By doing this, you enable path conversion from Windows-style to Unix-style in volume definitions. For more information, see the <xref href="https://docs.docker.com/compose/reference/envvars/" format="html" scope="external">Docker Compose documentation </xref>.</note></info> </substep><substep> <cmd>Initialize a swarm by running the following command: </cmd> <info><codeblock translate="no" xml:space="preserve">docker swarm init</codeblock></info> </substep></substeps> </step><step> <cmd>Download the <ph conkeyref="ProductNames/remediate"/> <xref format="yaml" href="https://storage.googleapis.com/remediate/stable/latest/docker-compose.yml" scope="external">Docker Compose file</xref> to the same directory as your license.</cmd> <info><note>If you want to manually validate the signature, see <b>Verify Docker
                            Compose file</b> for more information.</note></info> </step><step> <cmd>Run the following command ⁠(replacing <codeph translate="no">your-license.json</codeph> with your own license):</cmd> <info><p> <codeblock translate="no" xml:space="preserve">docker-compose run remediate start --license-file your-license.json</codeblock> </p><p>The container images are pulled from the Google Cloud Registry.</p></info> </step><step> <cmd>To check that all the images have downloaded and that the containers have started running, run the following command:</cmd> <info><p> <codeblock translate="no" xml:space="preserve">docker ps</codeblock> </p><p>The list of running containers:</p><p> <codeblock translate="no" xml:space="preserve">CONTAINER ID        IMAGE                                             COMMAND                  CREATED             STATUS                   PORTS                NAMES
36139cda23ca        gcr.io/puppet-discovery/pdp-go:&lt;version&gt;          "/app/entrypoint.sh"     3 minutes ago       Up 3 minutes (healthy)   8082/tcp, 8087/tcp   remediate_gopdp.1.w035aad0ifvu0ynaimxy64lcq
43709401f394        gcr.io/puppet-discovery/pd-storage:&lt;version&gt;      "storageEntryPoint.s…"   3 minutes ago       Up 3 minutes (healthy)   5432/tcp             remediate_storage.1.omv1rrd3rwhnwo3ngurgtcnxk
551b061acc98        gcr.io/puppet-discovery/licensing-api:&lt;version&gt;   "/entrypoint.sh"         3 minutes ago       Up 3 minutes (healthy)                        remediate_licensing.1.kdoj7s492el77rdpc2rza3fx7
43a3568e6b5a        vault:1.1.2                                       "docker-entrypoint.s…"   3 minutes ago       Up 3 minutes (healthy)   8200/tcp             remediate_vault.1.k0jgyxxi45ldn4pqadhgvjf0o
11b90d8564ef        gcr.io/puppet-discovery/identity:&lt;version&gt;        "/opt/jboss/tools/do…"   3 minutes ago       Up 3 minutes (healthy)   8080/tcp, 8443/tcp   remediate_identity.1.b1wkt4kx4ps107949k14ctsqx
1235fd27cbdc        gcr.io/puppet-discovery/frontdoor:&lt;version&gt;       "nginx -g 'daemon of…"   3 minutes ago       Up 3 minutes (healthy)   80/tcp               remediate_frontdoor.1.oib8jsr7u4z6wqxvjz02mxcxz
a3a641af5269        gcr.io/puppet-discovery/pdp-proxy:&lt;version&gt;       "/pdp-proxy-svc"         3 minutes ago       Up 3 minutes (healthy)   9200/tcp             remediate_export.1.uin509pnc2zb4pf3rdjr1so0x
c60250b8a2eb        gcr.io/puppet-discovery/node-ui:&lt;version&gt;         "/usr/src/app/entryp…"   3 minutes ago       Up 3 minutes (healthy)                        remediate_ui.1.3u0tewgou7t4hz2c46nn4mydo
f9af99dc9ca7        gcr.io/puppet-discovery/edge:&lt;version&gt;            "/edge-svc"              3 minutes ago       Up 3 minutes             9997/tcp             remediate_edge.1.koacwnjoce2tabwcbi73619fu
149485b54fec        gcr.io/puppet-discovery/controller:&lt;version&gt;      "/controller-svc"        4 minutes ago       Up 4 minutes (healthy)   9999/tcp             remediate_controller.1.mww2fm9up4lmeisjorul89hr4
f9f1ab4a029d        gcr.io/puppet-discovery/vr:&lt;version&gt;              "/vr-svc"                4 minutes ago       Up 4 minutes (healthy)                        remediate_vr.1.yjlliup91g4mac1bklvvw2nqq</codeblock> </p></info> </step><step> <cmd>To access <ph conkeyref="ProductNames/remediate"/> on a local workstation, the URL is <codeph translate="no"> <xref format="html" href="https://localhost:8443/" scope="external">https://localhost:8443</xref> </codeph>, or port <codeph translate="no">8443</codeph> on the host where you installed <ph conkeyref="ProductNames/remediate"/>.</cmd> </step><step> <cmd>Read and accept the software license agreement.</cmd> </step><step> <cmd>Sign in to <ph conkeyref="ProductNames/remediate"/>.</cmd> <info><p>For default usernames and passwords, see <b>Managing user access</b>.</p></info> </step></steps></taskbody></task>